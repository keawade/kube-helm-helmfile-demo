# Define our Secret
apiVersion: v1
kind: Secret
metadata:
  # Define a name we can reference this Secret by later
  name: demo-express-app-secret
# Define our content. This is a YAML object so we could specify multiple
# key-value pairs if we wanted to. Keep in mind that it's usually wise to use
# multiple Secrets or ConfigMaps for separation of concerns so your provided
# configurations can be defined independently of each other.
data:
  databaseConnectionString: cG9zdGdyZXM6Ly9kZW1vOmRlbW9AcG9zdGdyZXNxbC5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvZGVtby1leHByZXNzLWFwcAo=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-express-app-v1
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: demo-express-app
      app.kubernetes.io/version: "1"

  template:
    metadata:
      labels:
        app.kubernetes.io/name: demo-express-app
        app.kubernetes.io/version: "1"
    spec:
      containers:
        - name: demo-express-app-v1
          image: demo-express-app:1
          imagePullPolicy: Never
          ports:
            - name: http-web-svc
              containerPort: 3000
          env:
            - name: DATABASE_CONNECTION_STRING
              # Change the source of our database connection string from being
              # defined inline to being supplied from a Secret
              valueFrom:
                # If we wanted to map in a ConfigMap instead we would use the
                # configMapKeyRef key here instead.
                secretKeyRef:
                  name: demo-express-app-secret
                  key: databaseConnectionString
---
apiVersion: v1
kind: Service
metadata:
  name: demo-express-app-v1
  labels:
    app.kubernetes.io/name: demo-express-app
    app.kubernetes.io/version: "1"
spec:
  selector:
    app.kubernetes.io/name: demo-express-app
    app.kubernetes.io/version: "1"
  type: LoadBalancer
  ports:
    - name: app-http
      port: 3000
      protocol: TCP
      targetPort: http-web-svc
---
apiVersion: v1
kind: Pod
metadata:
  name: postgresql
  labels:
    app.kubernetes.io/name: postgresql
spec:
  containers:
    - name: postgresql
      image: postgres:14
      ports:
        - name: postgresql-port
          containerPort: 5432
      env:
        - name: POSTGRES_USER
          value: demo
          # It would make sense to also supply this via a Secret rather than
          # hardcoding it in our configuration but since we'll be moving away
          # from this Pod definition soon we'll leave it as is for now.
        - name: POSTGRES_PASSWORD
          value: demo
        - name: POSTGRES_DB
          value: demo-express-app
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app.kubernetes.io/name: postgresql
  type: LoadBalancer
  ports:
    - name: postgresql-port
      port: 5432
      targetPort: postgresql-port
